//
//  ViewController.swift
//  Concentration
//
//  Created by Nikita Entin on 25.10.2020.
//

import UIKit

class ViewController: UIViewController {
    
    /// —ç–∫–∑–º–µ–º–ª—è—Ä –∫–ª–∞—Å—Å–∞, –≤–æ –≤—Ö–æ–¥–Ω–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —á–∏—Å–ª–æ –ø–∞—Ä–Ω—ã—Ö –∫–∞—Ä—Ç = –≤—Å–µ–º—É —á–∏—Å–ª—É –∫–Ω–æ–ø–æ–∫/2; +1 –¥–ª—è –Ω–µ—á–µ—Ç–Ω–æ–≥–æ –∫–æ–ª-–≤–∞ –∫–∞—Ä—Ç –≤ –º–∞—Å—Å–∏–≤–µ
    lazy var game = ConcentrationGame(numberOfPairedCards: (AllButtons.count + 1)/2)
    /// —Å—á–µ—Ç—á–∏–∫ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–æ–≤
    var flipCount = 0{
        didSet{
            labelCounter.text = "Flips : \(flipCount)"
        }
    }
    @IBOutlet weak var labelCounter: UILabel!
  
    @IBOutlet var AllButtons: [UIButton]!
    
    @IBAction func newGame(_ sender: UIButton) {
        reset()
    }
    
    @IBAction func touchCard(_ sender: UIButton) {
        flipCount += 1
        if flipCount > 15 {      //–ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é 15 –∫–ª–∏–∫–æ–≤ –∏–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ
            reset()
        }
        
        /// —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ –ø–µ—Ä–≤–æ–º—É –∏–Ω–¥–µ–∫—Å—É –∏–∑ –º–∞—Å—Å–∏–≤–∞ AllButtons
        if let cardNumber = AllButtons.firstIndex(of: sender) {
            game.chooseCard(index: cardNumber) // –≤—ã–±–æ—Ä –∫–∞—Ä—Ç—ã –ø–æ –∏–Ω–¥–µ–∫—Å—É
            flipCard() // –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø–æ–≤–æ—Ä–æ—Ç–µ –∫–∞—Ä—Ç—ã
        }
        else {
            print("Fail")
        }
    }
    
    func reset() {
        flipCount = 0
        game.reset()
    }

    var emojiArray = ["üêû", "üê∏", "üêî", "‚öΩÔ∏è", "üéæ", "üé≤", "üöÄ", "üí∏", "üîÆ", "üß∏"]
    var emojiDictionary = [Int:String]()
    
    /// –º–µ—Ç–æ–¥ –ø–æ –ø–µ—Ä–µ–Ω–æ—Å—É —ç–º–æ–¥–∑–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å —ç–º–æ–¥–∑–∏ –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—ã–∑–æ–≤–∞ –ø–æ –Ω–æ–º–µ—Ä—É
    /// - Parameter card: –ø—Ä–æ—Å—Ç–æ –∫–∞—Ä—Ç–∞
    /// - Returns: –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–º–æ–¥–∑–∏ –≤ —Å–ª–æ–≤–∞—Ä—å, —É–±–∏—Ä–∞—è –µ–≥–æ –∏–∑ –º–∞—Å—Å–∏–≤–∞
    func emojiMethod(card:Card) -> String {
        if emojiDictionary[card.ID] == nil {   // —É—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ —Å–ª–æ–≤–∞—Ä—è
            if emojiArray.count > 0 {           //—É—Å–ª–æ–≤–∏–µ –Ω–µ–ø—É—Å—Ç–æ—Ç—ã –º–∞—Å—Å–∏–≤–∞ —ç–º–æ–¥–∑–∏
                let randomEmoji = Int(arc4random_uniform(UInt32(emojiArray.count)))   // —Ä–∞–Ω–¥–æ–º –≤—ã–±–æ—Ä —ç–º–æ–¥–∑–∏
                emojiDictionary[card.ID] = emojiArray.remove(at: randomEmoji)
            }
        }
        return emojiDictionary[card.ID] ?? "?"
    }
    
    
    /// –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
    func flipCard() {
        for index in AllButtons.indices {  // –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞ AllButtons
            let button = AllButtons[index]  // –∫–Ω–æ–ø–∫–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –∏–Ω–¥–µ–∫—Å –∏–∑ –º–∞—Å—Å–∏–≤–∞ AllButtons
            let card = game.cards[index]  //–∫–∞—Ä—Ç–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –∏–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã –∏–∑ –∫–ª–∞—Å—Å–∞ ConcentrationGame
            if card.isFacedUp {  //–∫–∞—Ä—Ç–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∞ -–¥–∞
                button.setTitle(emojiMethod(card: card), for: .normal)  // –∫–Ω–æ–ø–∫–µ –∑–∞–¥–∞—é—Ç—Å—è —Ä–∞–Ω–¥–æ–º —ç–º–æ–¥–∑–∏
                button.backgroundColor = .green  // —Å –∑–µ–ª–µ–Ω—ã–º —Ñ–æ–Ω–æ–º
            } else { //-–Ω–µ—Ç
                button.setTitle("", for: .normal) //—É –∫–Ω–æ–ø–∫–∏ –Ω–∏—á–µ–≥–æ
                button.backgroundColor = card.isMatched ? #colorLiteral(red: 0.4392156899, green: 0.01176470611, blue: 0.1921568662, alpha: 0) : #colorLiteral(red: 1, green: 1, blue: 1, alpha: 1)  // —Ü–≤–µ—Ç –ª–∏–±–æ –∫—Ä–∞—Å–Ω—ã–π, –ª–∏–±–æ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π
            }
        }
    }

}


